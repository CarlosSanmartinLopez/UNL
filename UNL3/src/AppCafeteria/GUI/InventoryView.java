/*
 * Copyright (c) 2016 Stelliox.com.
 * 
 * This file is part of Stelliox.com.
 * 
 * This code can not be copied and/or distributed without the express
 * permission of Stelliox.com <ejemplo@stelliox.com>
 * 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *    DEVELOPED BY STELLIOX.COM
 *    ECUADOR - LOJA - 2016
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 */
package AppCafeteria.GUI;

import AppCafeteria.Model.Inventory;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;

/**
 *
 * @author Stelliox.com
 */
public class InventoryView extends javax.swing.JPanel implements ActionListener{

    /**
     * Creates new form InventoryView
     */
    
    JMenuItem menuItemRemove = new JMenuItem("Eliminar");
    
    public InventoryView() {
        initComponents();
        
        JPopupMenu popupMenu = new JPopupMenu();
            menuItemRemove.addActionListener(this);
            
        popupMenu.add(menuItemRemove);
        jtblInventory.setComponentPopupMenu(popupMenu);
        jtblInventory.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mousePressed(MouseEvent event) {
                        Point point = event.getPoint();
                        int currentRow = jtblInventory.rowAtPoint(point);
                        jtblInventory.setRowSelectionInterval(currentRow, currentRow);
                        
                        jtxtName.setText((String)jtblInventory.getValueAt(
                                            jtblInventory.getSelectedRow(), 0));
                        jtxtValue.setText(jtblInventory.getValueAt(
                                            jtblInventory.getSelectedRow(), 1).toString());
                        jtxtCant.setText(jtblInventory.getValueAt(
                                            jtblInventory.getSelectedRow(), 2).toString());
                    }
                });
        
        loadInventory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtblInventory = new javax.swing.JTable();
        jtxtName = new javax.swing.JTextField();
        jtxtValue = new javax.swing.JTextField();
        jtxtCant = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jtblInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Varlor", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtblInventory);

        jtxtValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtValueKeyTyped(evt);
            }
        });

        jtxtCant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtCantKeyTyped(evt);
            }
        });

        jLabel1.setText("Nombre");

        jLabel2.setText("Cantidad");

        jLabel3.setText("Valor");

        jButton1.setText("AÃ±adir");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtxtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jtxtName, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
        if(!jtxtName.getText().isEmpty()) {
            Inventory inventory = Inventory.getInstance();
            
            double value;
            if(jtxtValue.getText().isEmpty())
                value = 0;
            else
                value = Double.parseDouble(jtxtValue.getText());
            
            int cant;
            if(jtxtCant.getText().isEmpty())
                cant = 0;
            else
                cant = Integer.parseInt(jtxtCant.getText());

            inventory.add(jtxtName.getText(), 
                          value,
                          cant);
            
            loadInventory();
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jtxtValueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtValueKeyTyped
        char text = evt.getKeyChar();
        
        if (((text < '0') || (text > '9')) && (text != '.')){
            evt.consume();
        }
    }//GEN-LAST:event_jtxtValueKeyTyped

    private void jtxtCantKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCantKeyTyped
        char text = evt.getKeyChar();
        
        if (((text < '0') || (text > '9'))){
            evt.consume();
        }
    }//GEN-LAST:event_jtxtCantKeyTyped

    private void loadInventory() {
        jtblInventory = AppCafeteria.Utilities.LoadTable.loadInventory(jtblInventory);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtblInventory;
    private javax.swing.JTextField jtxtCant;
    private javax.swing.JTextField jtxtName;
    private javax.swing.JTextField jtxtValue;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent event) {
        JMenuItem menu = (JMenuItem) event.getSource();
        
        if (menu == menuItemRemove) {
            Inventory inventory = Inventory.getInstance();
            inventory.remove( 
                    (String)jtblInventory.getValueAt(
                            jtblInventory.getSelectedRow(), 0));
            loadInventory();
        }
    }
}
